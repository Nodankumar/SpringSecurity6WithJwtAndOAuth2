package com.springsecurity.services;

import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.security.Keys;

@Service
public class JwtService {
	
	private SecretKey secretKey;

	public String generateToken(String username) {
		
		Map<String, Object> claims = new HashMap<String, Object>();
		
		return Jwts.builder()
				.claims()
				.add(claims)
				.subject(username)
				.issuedAt(new Date(System.currentTimeMillis()))
				.expiration(new Date(System.currentTimeMillis()+30 * 60 * 1000))
				.and()
				.signWith(getKey()).compact();	
	}

	private SecretKey getKey() {
		KeyGenerator generator;
//		byte[] keybytes = null;
		try {
			generator = KeyGenerator.getInstance("HMACSHA256");
			secretKey = generator.generateKey();
//			String secretkeystr = Base64.getEncoder().encodeToString(secretKey.getEncoded());
//			keybytes= secretkeystr.getBytes();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		return Keys.hmacShaKeyFor(secretKey.getEncoded());
		
	}

	public String extractUserName(String token) {
	    Claims claims = Jwts.parser()
	            .verifyWith(getKey())
	            .build()
	            .parseSignedClaims(token)
	            .getPayload();
	    return claims.getSubject();
	}

	public boolean validateToken(String token, UserDetails userDetails) {
	    final String username = extractUsername(token);
	    return (username.equals(userDetails.getUsername()) && !isTokenExpired(token));
	}

	private boolean isTokenExpired(String token) {
	    final Date expiration = Jwts.parser()
	            .verifyWith(getKey())
	            .build()
	            .parseSignedClaims(token)
	            .getPayload()
	            .getExpiration();
	    return expiration.before(new Date());
	}

}
