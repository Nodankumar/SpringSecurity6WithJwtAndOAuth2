package com.springsecurity.services;

import java.security.Key;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

import org.springframework.security.crypto.keygen.Base64StringKeyGenerator;
import org.springframework.stereotype.Service;

import io.jsonwebtoken.Jwts;

@Service
public class JwtService {
	
	private SecretKey secretKey;

	public String generateToken(String username) {
		
		Map<String, Object> claims = new HashMap<String, Object>();
		
		return Jwts.builder()
				.claims()
				.add(claims)
				.subject(username)
				.issuedAt(new Date(System.currentTimeMillis()))
				.expiration(new Date(System.currentTimeMillis()+30 * 60 * 1000))
				.and()
				.signWith(getKey()).compact();	
	}

	private Key getKey() {
		Base64StringKeyGenerator generator = new Base64StringKeyGenerator();
		String key = generator.generateKey();
		
		return null;
	}

}
